import java.util.Random;
import java.util.Scanner;

public class QuickS {

		int partition(int arr[],int lowIndex,int highIndex)
		{
			int pivot = arr[highIndex];
			int i = (lowIndex-1);
			for(int j = lowIndex;j<highIndex;j++)
			{
				if(arr[j]<=pivot)
				{
					i++;
					int temp = arr[i];
					arr[i] = arr[j];
					arr[j] = temp;
				}
			}
			int temp = arr[i+1];
			arr[i+1] = arr[highIndex];
			arr[highIndex] = temp;
			return i+1;
		}
		void sort(int arr[],int lowIndex, int highIndex)
		{
			if(lowIndex < highIndex)
			{
				int pi = partition(arr,lowIndex,highIndex);
				sort(arr,lowIndex,pi-1);
				sort(arr,pi+1,highIndex);
			}
		}
		static void printArray(int arr[],int k)
		{
				for(int i = 0;i<k; i++)
				System.out.println(arr[i]+"");
				System.out.println();
		}
		public static void main(String args[])
		{
			Random r = new Random();
			int arr[] = new int[10000];
			Scanner in = new Scanner(System.in);
			System.out.println("Enter array size:");
			int n = in.nextInt();
			System.out.println(" the array elements are\t");
			for(int i = 0;i<n;i++)
			{
				arr[i] = r.nextInt(10000);
				System.out.println(arr[i]);
			}
			QuickS ob = new QuickS();
			double start = System.nanoTime();
			ob.sort(arr, 0, n-1);
			double end = System.nanoTime();
			System.out.println("Sorted array");
			printArray(arr,n);
			double duration = (end-start);
			double milliseconds = (duration/1000000);
			System.out.println("Time taken to sort is "+milliseconds+" milliseconds");
		}
		

}
